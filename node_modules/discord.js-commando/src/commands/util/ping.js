const { oneLine } = require('common-tags');
const Command = require('../base');

module.exports = class PingCommand extends Command {
	constructor(client) {
		super(client, {
			name: 'ping',
			group: 'util',
			memberName: 'ping',
			description: 'Checks the bot\'s ping to the Discord server.',
			throttling: {
				usages: 5,
				duration: 10
			}
		});
	}

	async run(msg, args) {
		var options = "";
		if(args.length > 0)
		{
			options = args.toLowerCase()
		}

		if(options == "all" && msg.author.id == msg.client.owners[0].id)
		{
			var totalShards = msg.client.shard.count;
			msg.client.shard.fetchClientValues('shard')
			.then(results => {
				var pingAll = "***All Shards Status:***"
				for(var shard in results)
				{
					pingAll = pingAll + `\nShard ${results[shard].id} from ${totalShards}. Ready status: ${results[shard].ready}.`
				}
				msg.channel.send(pingAll, {split: true}).catch(error => console.log("Send Error - " + error));
			})
			.catch(console.error);
		}
		else if (options.startsWith("restart") && msg.author.id == msg.client.owners[0].id)
		{
			if(options == "restart all")
			{
				msg.client.shard.broadcastEval(`this.shard.respawn()`).catch(console.error);
			}
			else
			{
				var amountText = options.match(/\d+/g);
				var amount = []
				if(amountText != null)
				{
					amount = amountText.map(Number);
				}
	
				if(amount.length > 0)
				{
					for(var i = 0; i < amount.length; i++)
					{
						msg.client.shard.broadcastEval(`if(this.shard.id == ${amount[i]})this.shard.respawn()`).catch(console.error);
						msg.channel.send("Restarting Shard " + amount[i])
					}
				}
			}
		}
		else
		{

			if(!msg.editable) {
				const pingMsg = await msg.channel.send('Pinging...').catch(error => console.log("Send Error - " + error));
				if(pingMsg != undefined)
				{
					return pingMsg.edit(oneLine`
					${msg.channel.type !== 'dm' ? `${msg.author},` : ''}
					Pong! The message round-trip took ${pingMsg.createdTimestamp - msg.createdTimestamp}ms.
					${this.client.ping ? `The heartbeat ping is ${Math.round(this.client.ping)}ms.` : ''}
					`).catch(error => console.log("Edit Error - " + error));
				}
			} else {
				if(msg != undefined)
				{
					await msg.edit('Pinging...').catch(error => console.log("Edit Error - " + error));
					return msg.edit(oneLine`
						Pong! The message round-trip took ${msg.editedTimestamp - msg.createdTimestamp}ms.
						${this.client.ping ? `The heartbeat ping is ${Math.round(this.client.ping)}ms.` : ''}
					`).catch(error => console.log("Edit Error - " + error));
				}
			}
		}
	}
};
